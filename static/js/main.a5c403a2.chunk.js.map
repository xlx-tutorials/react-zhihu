{"version":3,"sources":["../../../../src/theme/palette.ts","../../../../src/theme/theme.ts","../../../../src/theme/darkTheme.ts","../../../../../src/contexts/ThemeContexts/index.tsx","../../../../../src/components/Buttons/index.tsx","components/Center.jsx","containers/HomePage/index.jsx","containers/NotfoundPage.jsx","components/Navigation.jsx","containers/PageWrapper/index.jsx","containers/SecondPage/index.jsx","Routes.jsx","global.css.js","components/Providers/EmotionThemeProvider.jsx","components/Providers/index.jsx","reportWebVitals.js","index.js","App.jsx"],"names":["theme","setTheme","Center","spinAni","keyframes","HomePage","useTheme","className","css","colors","black","size","color","NotfoundPage","navCSS","background","linkCSS","Navigation","children","arrayChildren","React","Children","toArray","props","map","child","path","label","default","undefined","Error","type","name","to","key","PageWrapper","SecondPage","Button","Routes","id","normalizeBoxSizing","normalize","EmotionThemeProvider","Providers","console","log","THEME","ThemeProvider","themes","light","dark","DARK_THEME","defaultThemeKey","reachHistory","globalHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","styles","globalCss","text","document","getElementById"],"mappings":"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","file":"static/js/main.a5c403a2.chunk.js","sourcesContent":["import { rgba } from 'polished';\nexport const PALETTE = {\n    primary: '#06f',\n    gray: '#8590a6',\n    get black() {\n        const base = '#121212';\n        return {\n            base,\n            90: rgba(base, 0.9),\n            80: rgba(base, 0.8),\n            70: rgba(base, 0.7),\n            60: rgba(base, 0.6),\n            50: rgba(base, 0.5),\n            40: rgba(base, 0.4),\n            30: rgba(base, 0.3),\n            20: rgba(base, 0.2),\n            10: rgba(base, 0.1),\n            6: rgba(base, 0.06),\n        };\n    },\n    get white() {\n        const base = '#ffffff';\n        return {\n            base,\n            90: rgba(base, 0.9),\n            80: rgba(base, 0.8),\n            70: rgba(base, 0.7),\n            60: rgba(base, 0.6),\n            50: rgba(base, 0.5),\n            40: rgba(base, 0.4),\n            30: rgba(base, 0.3),\n            20: rgba(base, 0.2),\n            10: rgba(base, 0.1),\n            6: rgba(base, 0.06),\n        };\n    },\n};\n//# sourceMappingURL=palette.js.map","import { PALETTE } from '.';\nconst colors = {\n    primary: PALETTE.primary,\n    secondary: PALETTE.gray,\n    text: PALETTE.black.base,\n    background: '#f6f6f6',\n    black: PALETTE.black,\n    white: PALETTE.white,\n};\nexport const THEME = {\n    colors,\n};\n//# sourceMappingURL=theme.js.map","import { PALETTE } from '.';\nconst colors = {\n    primary: PALETTE.primary,\n    secondary: PALETTE.gray,\n    text: PALETTE.white.base,\n    background: PALETTE.black.base,\n    black: PALETTE.white,\n    white: PALETTE.black,\n};\nexport const DARK_THEME = {\n    colors,\n};\n//# sourceMappingURL=darkTheme.js.map","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { createContext, useContext, useState } from 'react';\nconst ThemeContext = createContext(undefined);\n// /** ThemeProvider\n//  * @template T\n//  * @param {{\n//  *  themes: T\n//  *  defaultThemeKey: keyof T\n//  *  defaultFollowSystem: boolean\n//  * }}\n//  */\nexport function ThemeProvider({ children, themes, defaultThemeKey, }) {\n    // must provide themes\n    if (themes === undefined) {\n        throw new Error(`Please make your themes prop a plain object`);\n    }\n    // must provide light and dark themes\n    if (themes.light === undefined && themes.dark === undefined) {\n        throw new Error('Must provide `light` and `dark` themes');\n    }\n    // set default theme key\n    if (defaultThemeKey === undefined && themes !== undefined) {\n        // eslint-disable-next-line no-param-reassign\n        defaultThemeKey = Object.keys(themes)[0];\n    }\n    // current theme state\n    const [theme, setTheme] = useState(themes[defaultThemeKey]);\n    // pack value\n    const value = {\n        themes,\n        defaultThemeKey,\n        theme,\n        setTheme,\n    };\n    return _jsx(ThemeContext.Provider, Object.assign({ value: value }, { children: children }), void 0);\n}\n/**\n * useTheme\n * @returns {{\n *  theme: import('global').CustomTheme\n *  switchTheme: (key: string)=>void\n *  toggleThemeMode: function\n *  curThemeKey: string\n * }}\n */\nexport function useTheme() {\n    var _a, _b;\n    const context = useContext(ThemeContext);\n    if (context === undefined) {\n        throw new Error(`useTheme must be used within ${ThemeProvider.name}`);\n    }\n    const { themes, theme, setTheme } = context;\n    const curThemeKey = (_b = (_a = Object.entries(themes).find(([key, val]) => val === theme)) === null || _a === void 0 ? void 0 : _a[0]) !== null && _b !== void 0 ? _b : 'light';\n    function switchTheme(key) {\n        setTheme(themes[key]);\n    }\n    function toggleThemeMode() {\n        if (curThemeKey === 'dark') {\n            if (themes.light)\n                setTheme(themes.light);\n        }\n        else if (themes.dark)\n            setTheme(themes.dark);\n    }\n    return {\n        theme,\n        setTheme,\n        switchTheme,\n        toggleThemeMode,\n        curThemeKey,\n    };\n}\n//# sourceMappingURL=index.js.map","import { jsx as _jsx } from \"@emotion/react/jsx-runtime\";\nimport { css } from '@emotion/react';\nimport styled from '@emotion/styled';\nexport const Btn = styled.button `\n  color: red;\n`;\nexport function Button({ children }) {\n    return (_jsx(\"button\", Object.assign({ css: css `\n        color: royalblue;\n      ` }, { children: children }), void 0));\n}\n//# sourceMappingURL=index.js.map","import styled from '@emotion/styled'\n\nconst Center = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 60px;\n`\n\nexport default Center\n","import { css, keyframes } from '@emotion/react'\nimport { useTheme } from '@react-zhihu/components'\nimport Center from 'components/Center'\nimport { RiReactjsFill } from 'react-icons/ri'\n\nconst spinAni = keyframes`\n  from {\n    transform: rotate(0)\n  }\n  to {\n    transform: rotate(360deg)\n  }\n`\n\n/**\n * HomePage\n */\nfunction HomePage() {\n  const { theme } = useTheme()\n\n  return (\n    <Center\n      className='HomePage'\n      css={css`\n        code {\n          background-color: ${theme.colors.black[10]};\n          color: slategray;\n          border-radius: 2px;\n          padding: 4px 8px;\n          font-size: 14px;\n        }\n      `}\n    >\n      <RiReactjsFill\n        size='8rem'\n        color='royalblue'\n        css={css`\n          animation: ${spinAni} 4s linear infinite;\n        `}\n      />\n      <h2>Cra Template Popular</h2>\n      <code>\n        yarn create react-app --template <strong>popular</strong>\n      </code>\n    </Center>\n  )\n}\n\nexport default HomePage\n","import Center from 'components/Center'\n\nfunction NotfoundPage() {\n  return (\n    <Center className='NotfoundPage'>\n      <p>Page not found.</p>\n    </Center>\n  )\n}\n\nexport default NotfoundPage\n","import { css } from '@emotion/react'\nimport { Link } from '@reach/router'\nimport React from 'react'\nimport { themeCSS } from 'utils/themeCSS'\n\nconst navCSS = themeCSS(\n  (theme) => css`\n    background-color: ${theme.colors.background};\n    border-bottom: 1px solid ${theme.colors.black[6]};\n    min-height: 50px;\n    display: flex;\n    justify-content: center;\n    overflow-x: auto;\n    padding: 8px 0;\n  `\n)\n\nconst linkCSS = css`\n  /* background-color: lavender; */\n  color: lightslategray;\n  font-size: 15px;\n  padding: 8px 18px;\n  margin: 0 12px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  font-weight: bold;\n  transition: 0.2s;\n\n  &[aria-current='page'] {\n    color: whitesmoke;\n    background-color: slategrey;\n    border-radius: 100px;\n  }\n`\n\nfunction Navigation({ children }) {\n  // Make sure children is an array\n  const arrayChildren = React.Children.toArray(children.props.children)\n\n  return (\n    <nav className='Navigation' css={navCSS}>\n      {arrayChildren.map((child) => {\n        const { path, label } = child.props\n\n        if (child.props.default) return null\n\n        if (child.props.path === undefined) {\n          throw new Error(`${child.type.name} should have path prop.`)\n        }\n\n        // Render nav link by nested routes\n        return (\n          <Link to={path} key={path} css={linkCSS}>\n            {label ?? child.type.name}\n          </Link>\n        )\n      })}\n    </nav>\n  )\n}\n\nexport default Navigation\n","/**\n * PageWrapper\n */\nimport React from 'react'\nimport Navigation from 'components/Navigation'\n\nfunction PageWrapper({ children }) {\n  return (\n    <>\n      <Navigation>{children}</Navigation>\n\n      {children}\n    </>\n  )\n}\n\nexport default PageWrapper\n","/**\n * SecondPage\n */\n\nimport { Button } from '@react-zhihu/components'\nimport Center from 'components/Center'\n\nfunction SecondPage() {\n  return (\n    <Center className='SecondPage'>\n      <h1>SecondPage</h1>\n      <Button>Click Me</Button>\n    </Center>\n  )\n}\n\nexport default SecondPage\n","/**\n * Routes\n */\n\nimport { Router } from '@reach/router'\nimport HomePage from './containers/HomePage'\nimport NotfoundPage from './containers/NotfoundPage'\nimport PageWrapper from './containers/PageWrapper'\nimport SecondPage from './containers/SecondPage'\n\nfunction Routes() {\n  return (\n    <Router id='router'>\n      <PageWrapper path='/'>\n        <HomePage path='/' label='Home' />\n        <SecondPage path='second' label='Second' />\n        <NotfoundPage default />\n      </PageWrapper>\n    </Router>\n  )\n}\n\nexport default Routes\n","import { css } from '@emotion/react'\nimport { normalize } from 'polished'\n\nconst normalizeBoxSizing = css`\n  html {\n    box-sizing: border-box;\n  }\n  *,\n  *:before,\n  *:after {\n    box-sizing: inherit;\n  }\n`\n\nexport default css`\n  ${normalize()}\n  ${normalizeBoxSizing}\n\n  // Base\n  html,body,#root,#router {\n    height: 100%;\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen,\n      Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n  }\n\n  #router,\n  div[tabindex='-1'] {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n  }\n\n  button {\n    border: none;\n    cursor: pointer;\n\n    &:active {\n      opacity: 0.5;\n    }\n  }\n\n  a {\n    color: currentColor;\n    text-decoration: none;\n\n    &:active {\n      opacity: 0.5;\n    }\n  }\n`\n","import { ThemeProvider } from '@emotion/react'\nimport { useTheme } from '@react-zhihu/components'\n\nexport function EmotionThemeProvider({ children }) {\n  const { theme } = useTheme()\n\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>\n}\n","import { globalHistory } from '@reach/router'\nimport { DARK_THEME, THEME, ThemeProvider } from '@react-zhihu/components'\nimport { QueryParamProvider } from 'use-query-params'\nimport { EmotionThemeProvider } from './EmotionThemeProvider'\n\nexport function Providers({ children }) {\n  console.log(THEME)\n  return (\n    <ThemeProvider\n      themes={{\n        light: THEME,\n        dark: DARK_THEME,\n      }}\n      defaultThemeKey='dark'\n    >\n      <EmotionThemeProvider>\n        <QueryParamProvider reachHistory={globalHistory}>\n          {children}\n        </QueryParamProvider>\n      </EmotionThemeProvider>\n    </ThemeProvider>\n  )\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n","import React from 'react'\nimport { css, Global } from '@emotion/react'\nimport Routes from './Routes'\nimport globalCss from './global.css'\nimport { Providers } from './components/Providers'\n\nexport function App() {\n  return (\n    <Providers>\n      <Global\n        styles={[\n          globalCss,\n          (theme) =>\n            css`\n              body {\n                color: ${theme.colors.text};\n                background-color: ${theme.colors.background};\n              }\n            `,\n        ]}\n      />\n      <Routes />\n    </Providers>\n  )\n}\n"],"sourceRoot":""}